# Composite
## También llamado: Objeto compuesto, Object Tree


### Sintésis
**Composite** es un patrón de diseño estructural que te permite componer objetos en estructuras de árbol
y trabajar con esas estructuras como si fueran objetos individuales.

**ESTRUCTURA**

* Component: Generalmente es una interface o clase abstracta la cual tiene las operaciones mínimas que serán utilizadas.
* Leaf: representa la parte más simple o pequeña de toda la estructura.
* Composite: es una estructura conformada por otros Composite y Leaf, los Composite tiene los métodos add y remove los cuales nos permiten agregar objetos de tipo Component.

### Descripción del ejemplo implementado
Se hace una jerarquía organizacional con suborganización, que pueden tener suborganizaciones posteriores, tales como:
Gerente General [Compuesto]
         Gerente 1 [Compuesto]
                  Desarrollador11 [Leaf]
                  Desarrollador12 [Leaf]
         Gerente 2 [Compuesto]
                  Desarrollador21 [Leaf]
                  Desarrollador22 [Leaf]


### Recursos
https://refactoring.guru/es/design-patterns/composite
https://refactoring.guru/es/design-patterns/composite/python/example
https://www.oscarblancarteblog.com/2014/10/07/patron-de-diseno-composite/

